<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE uridef[
  <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns">
  <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema">
  <!ENTITY owl "http://www.w3.org/2002/07/owl">
  <!ENTITY xsd "http://www.w3.org/2001/XMLSchema">
  <!ENTITY expr "http://localhost:8888/owl_s/1.2/generic/Expression.owl">
  <!ENTITY service "http://localhost:8888/owl_s/1.2/Service.owl">
  <!ENTITY profile "http://localhost:8888/owl_s/1.2/Profile.owl">
  <!ENTITY process "http://localhost:8888/owl_s/1.2/Process.owl">
  <!ENTITY list "http://localhost:8888/owl_s/1.2/generic/ObjectList.owl">
  <!ENTITY this "http://on.cs.unibas.ch/owl-s/1.2/ValueFunction.owl">
]>

<rdf:RDF
  xmlns="&this;#"
  xmlns:rdf="&rdf;#"
  xmlns:rdfs="&rdfs;#"
  xmlns:owl="&owl;#"
  xmlns:xsd="&xsd;#"
  xmlns:expr="&expr;#"
  xmlns:service="&service;#"
  xmlns:profile="&profile;#"
  xmlns:process="&process;#"
  xmlns:list="&list;#"
  xml:base="&this;">

<owl:Ontology rdf:about="">
	<owl:imports rdf:resource="&service;"/>
	<owl:imports rdf:resource="&process;"/>
	<owl:imports rdf:resource="&profile;"/>
	<owl:versionInfo>$Id: ValueFunction.owl 2481 2010-06-10 14:38:28Z thorsten $</owl:versionInfo>
</owl:Ontology>

<!-- Our simple world: consisting of some fictitious axioms and assertions. -->
<owl:Class rdf:ID="C1" />
<owl:Class rdf:ID="C2" />
<owl:ObjectProperty rdf:ID="op1" />
<owl:ObjectProperty rdf:ID="op1sub">
	<rdfs:domain rdf:resource="#C1" />
	<rdfs:range rdf:resource="#C2" />
	<rdfs:subPropertyOf rdf:resource="#op1" />
</owl:ObjectProperty>
<owl:ObjectProperty rdf:ID="op2">
	<rdfs:domain rdf:resource="#C1" />
	<rdfs:range rdf:resource="&service;#Service" />
</owl:ObjectProperty>

<C1 rdf:ID="C1Ind1">
	<op1sub rdf:resource="#C2Ind1" />
	<op2 rdf:resource="&this;#SomeService" />
</C1>
<C2 rdf:ID="C2Ind1">
	<op1sub rdf:resource="#C1Ind1" />
</C2>
<C2 rdf:ID="C2Ind2" />


<!-- Service description -->
<service:Service rdf:ID="ValueFunctionService">
	<service:presents rdf:resource="#ValueFunctionProfile"/>
	<service:describedBy rdf:resource="#ValueFunctionProcess"/>
</service:Service>

<!-- Profile description -->
<profile:Profile rdf:ID="ValueFunctionProfile">
	<service:presentedBy rdf:resource="#ValueFunctionService"/>
	<profile:serviceName>Value Function</profile:serviceName>
	<profile:textDescription xml:lang="en">
		This service/process does basically the same as
		http://on.cs.unibas.ch/owl-s/1.2/Existential.owl but in another way.
	</profile:textDescription>
	<profile:hasInput rdf:resource="#subject"/>
	<profile:hasInput rdf:resource="#predicate"/>
	<profile:hasOutput rdf:resource="#object"/>
</profile:Profile>

<!-- Composite Process description -->
<process:CompositeProcess rdf:ID="ValueFunctionProcess">
	<service:describes rdf:resource="#ValueFunctionService"/>

	<process:hasInput>
		<process:Input rdf:ID="subject">
			<process:parameterType rdf:datatype="&xsd;#anyURI">&this;#C1</process:parameterType>
			<rdfs:label>subject</rdfs:label>
		</process:Input>
	</process:hasInput>

	<process:hasInput>
		<process:Input rdf:ID="predicate">
			<process:parameterType rdf:datatype="&xsd;#anyURI">&owl;#ObjectProperty</process:parameterType>
			<rdfs:label>predicate</rdfs:label>
		</process:Input>
	</process:hasInput>

	<process:hasOutput>
		<process:Output rdf:ID="object">
			<process:parameterType rdf:datatype="&xsd;#anyURI">&this;#C2</process:parameterType>
			<rdfs:label>object</rdfs:label>
		</process:Output>
	</process:hasOutput>

	<process:hasResult>
		<process:Result>
			<process:withOutput>
				<process:OutputBinding>
					<process:toVar rdf:resource="#object" />
					<process:valueFunction rdf:parseType="Literal" >
						<expr:SPARQL-Expression>
							<expr:expressionData>
								SELECT ?o WHERE { ?s ?p ?o . }
							</expr:expressionData>
							<expr:variableBinding>
								<expr:VariableBinding>
									<expr:theVariable rdf:datatype="&xsd;#string">?s</expr:theVariable>
									<expr:theObject rdf:resource="#subject" />
								</expr:VariableBinding>
							</expr:variableBinding>
							<expr:variableBinding>
								<expr:VariableBinding>
									<expr:theVariable rdf:datatype="&xsd;#string">?p</expr:theVariable>
									<expr:theObject rdf:resource="#predicate" />
								</expr:VariableBinding>
							</expr:variableBinding>
							<expr:variableBinding>
								<expr:VariableBinding>
									<expr:theVariable rdf:datatype="&xsd;#string">?o</expr:theVariable>
									<expr:theObject rdf:resource="#object" />
								</expr:VariableBinding>
							</expr:variableBinding>
						</expr:SPARQL-Expression>
					</process:valueFunction>
				</process:OutputBinding>
			</process:withOutput>
		</process:Result>
	</process:hasResult>

	<process:composedOf>
		<process:Sequence>
			<process:components>
				<process:ControlConstructList rdf:about="&list;#nil" />
			</process:components>
		</process:Sequence>
	</process:composedOf>
</process:CompositeProcess>

</rdf:RDF>