<?xml version="1.0" encoding="UTF-8"?>
<!--
	======================================================================
	Created:     25.11.2008
	Version:     $Id: TestProfileServiceTermination.owl 2448 2010-05-26 14:44:31Z thorsten $

   (c) 2008 Thorsten MÃ¶ller - University of Basel Switzerland

   The MIT License
   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to
   deal in the Software without restriction, including without limitation the
   rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
   sell copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
   IN THE SOFTWARE.

	======================================================================
-->
<!DOCTYPE uridef[
  <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns">
  <!ENTITY shadow-rdf "http://localhost:8888/owl_s/1.2/generic/ObjectList.owl">
  <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema">
  <!ENTITY owl "http://www.w3.org/2002/07/owl">
  <!ENTITY process "http://localhost:8888/owl_s/1.2/Process.owl">
  <!ENTITY profile "http://localhost:8888/owl_s/1.2/Profile.owl">
  <!ENTITY service "http://localhost:8888/owl_s/1.2/Service.owl">
  <!ENTITY service-param "http://localhost:8888/owl_s/1.2/ServiceParameter.owl">
  <!ENTITY termination "http://on.cs.unibas.ch/owl-s/1.2/ProfileServiceTermination.owl">
  <!ENTITY xsd "http://www.w3.org/2001/XMLSchema">
  <!ENTITY THIS "http://on.cs.unibas.ch/owl-s/1.2/test/TestProfileServiceTermination.owl">
]>

<rdf:RDF
  xmlns:rdf=	  "&rdf;#"
  xmlns:shadow-rdf= "&shadow-rdf;#"
  xmlns:rdfs=	  "&rdfs;#"
  xmlns:owl =    "&owl;#"
  xmlns:process= "&process;#"
  xmlns:profile= "&profile;#"
  xmlns:service= "&service;#"
  xmlns:service-param= "&service-param;#"
  xmlns:termination= "&termination;#"
  xmlns=	        "&THIS;#"
  xml:base=      "&THIS;">

<owl:Ontology rdf:about="">
	<owl:versionInfo>
		$Id: TestProfileServiceTermination.owl 2448 2010-05-26 14:44:31Z thorsten $
	</owl:versionInfo>
	<rdfs:comment>
		This ontology contains various individuals to test correct entailment as
		intended by the ProfileServiceTermination OWL-S extension ontology.
	</rdfs:comment>
	<owl:imports>
		<owl:Ontology rdf:about="&profile;" />
	</owl:imports>
	<owl:imports>
		<owl:Ontology rdf:about="&process;" />
	</owl:imports>
	<owl:imports>
		<owl:Ontology rdf:about="&service;" />
	</owl:imports>
	<owl:imports>
		<owl:Ontology rdf:about="&termination;" />
	</owl:imports>
</owl:Ontology>

<!-- First, some service, profile, and process declarations required in order
     to have "complete" service descriptions, i.e., service descriptions that
     refer to at least one profile respectively a process (grounding is
     optional). -->

<service:Service rdf:ID="TestService">
	<service:presents rdf:resource="#NormalProfile" />
	<service:presents rdf:resource="#ImplicitCompensatableProfile" />
	<service:presents rdf:resource="#ImplicitRetriableAndPivotAndCompensatableProfile" />
	<service:presents rdf:resource="#ImplicitNonRetriableProfile" />
	<service:presents rdf:resource="#IImplicitNonRetriableAndCompensatableProfile" />
	<service:presents rdf:resource="#ImplicitRetriableAndCompensatableProfile" />
	<service:describedBy rdf:resource="#TestProcessModel" />
</service:Service>

<process:ProcessModel rdf:ID="TestProcessModel">
	<service:describes rdf:resource="#TestService" />
	<process:hasProcess rdf:resource="#TestProcess" />
</process:ProcessModel>

<process:AtomicProcess rdf:ID="TestProcess" />

<service:Service rdf:ID="TestServiceCompensator">
	<service:presents rdf:resource="#CompensatorProfile" />
	<service:describedBy rdf:resource="#TestCompensatorProcessModel" />
</service:Service>

<termination:Compensator rdf:ID="CompensatorProfile">
	<service:presentedBy rdf:resource="#TestServiceCompensator" />
	<profile:serviceName xml:lang="en">Test Service Compensator</profile:serviceName>
</termination:Compensator>

<process:ProcessModel rdf:ID="TestCompensatorProcessModel">
	<service:describes rdf:resource="#TestServiceCompensator" />
	<process:hasProcess rdf:resource="#TestCompensatorProcess" />
</process:ProcessModel>

<process:AtomicProcess rdf:ID="TestCompensatorProcess" />


<!-- Second, the actual test profiles. -->

<profile:Profile rdf:ID="NormalProfile">
	<service:presentedBy rdf:resource="#TestService" />
	<profile:serviceName xml:lang="en">Test Service</profile:serviceName>
	<profile:textDescription xml:lang="en">
		Inferencing should assert that this profile represents a termination:Pivot
		profile because the termination:compensator is missing, hence, not a
		termination:Compensatable profile, also because termination:Pivot and
		termination:Compensatable are	complementary.

		Furthermore, it is not possible to infer if it is a termination:Retriable
		nor if it is a termination:NonRetriable profile because the
		termination:retriable property is missing (note that OWL uses the open
		world	assumption).
	</profile:textDescription>
</profile:Profile>

<profile:Profile rdf:ID="ImplicitCompensatableProfile">
	<service:presentedBy rdf:resource="#TestService" />
	<profile:serviceName xml:lang="en">Test Service</profile:serviceName>
	<profile:textDescription xml:lang="en">
		OWL-DL inferencing should assert that this profile is a
		termination:Compensatable because a termination:compensator profile
		is specified.
	</profile:textDescription>
	<termination:compensator>
		<termination:CompensationServiceParameter>
			<service-param:sParameter rdf:resource="#CompensatorProfile" />
		</termination:CompensationServiceParameter>
	</termination:compensator>
</profile:Profile>

<profile:Profile rdf:ID="ImplicitRetriableAndPivotAndCompensatableProfile">
	<service:presentedBy rdf:resource="#TestService" />
	<profile:serviceName xml:lang="en">Test Service</profile:serviceName>
	<profile:textDescription xml:lang="en">
		OWL-DL inferencing should assert that this profile is a
		termination:Retriable because the termination:retriable property
		refers to True.

		Furthermore, it is also a termination:Pivot because the
		termination:compensator property is missing.

		Finally, because the two constraints above hold, inferencing should
		assert that it is a termination:Compensator as well.
	</profile:textDescription>
	<termination:retriable>
		<termination:RetriabilityServiceParameter>
			<service-param:sParameter rdf:resource="&termination;#True" />
		</termination:RetriabilityServiceParameter>
	</termination:retriable>
</profile:Profile>

<profile:Profile rdf:ID="ImplicitNonRetriableProfile">
	<service:presentedBy rdf:resource="#TestService" />
	<profile:serviceName xml:lang="en">Test Service</profile:serviceName>
	<profile:textDescription xml:lang="en">
		OWL-DL inferencing should assert that this profile is a
		termination:NonRetriable because the termination:retriable property
		refers to False.
	</profile:textDescription>
	<termination:retriable>
		<termination:RetriabilityServiceParameter>
			<service-param:sParameter rdf:resource="&termination;#False" />
		</termination:RetriabilityServiceParameter>
	</termination:retriable>
</profile:Profile>

<profile:Profile rdf:ID="ImplicitNonRetriableAndCompensatableProfile">
	<service:presentedBy rdf:resource="#TestService" />
	<profile:serviceName xml:lang="en">Test Service</profile:serviceName>
	<profile:textDescription xml:lang="en">
		OWL-DL inferencing should assert that this profile is both a
		termination:Compensatable and termination:NonRetriable because a
		compensator is specified and the termination:retriable property
		refers to False.
	</profile:textDescription>
	<termination:compensator>
		<termination:CompensationServiceParameter>
			<service-param:sParameter rdf:resource="#CompensatorProfile" />
		</termination:CompensationServiceParameter>
	</termination:compensator>
	<termination:retriable>
		<termination:RetriabilityServiceParameter>
			<service-param:sParameter rdf:resource="&termination;#False" />
		</termination:RetriabilityServiceParameter>
	</termination:retriable>
</profile:Profile>

<profile:Profile rdf:ID="ImplicitRetriableAndCompensatableProfile">
	<service:presentedBy rdf:resource="#TestService" />
	<profile:serviceName xml:lang="en">Test Service</profile:serviceName>
	<profile:textDescription xml:lang="en">
		OWL-DL inferencing should assert that this profile is both a
		termination:Compensatable and termination:Retriable because a compensator
		is specified using termination:compensator and the termination:retriable
		property refers to True.
	</profile:textDescription>
	<termination:compensator>
		<termination:CompensationServiceParameter>
			<service-param:sParameter rdf:resource="#CompensatorProfile" />
		</termination:CompensationServiceParameter>
	</termination:compensator>
	<termination:retriable>
		<termination:RetriabilityServiceParameter>
			<service-param:sParameter rdf:resource="&termination;#True" />
		</termination:RetriabilityServiceParameter>
	</termination:retriable>
</profile:Profile>

</rdf:RDF>