<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE uridef[
  <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns">
  <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema">
  <!ENTITY owl "http://www.w3.org/2002/07/owl">
  <!ENTITY xsd "http://www.w3.org/2001/XMLSchema">
  <!ENTITY service "http://localhost:8888/owl_s/1.1/Service.owl">
  <!ENTITY profile "http://localhost:8888/owl_s/1.1/Profile.owl">
  <!ENTITY process "http://localhost:8888/owl_s/1.1/Process.owl">
  <!ENTITY grounding "http://localhost:8888/owl_s/1.1/Grounding.owl">
  <!ENTITY expr "http://localhost:8888/owl_s/1.1/generic/Expression.owl">
  <!ENTITY swrl "http://www.w3.org/2003/11/swrl">
  <!ENTITY swrlb "http://www.w3.org/2003/11/swrlb">
  <!ENTITY list "http://localhost:8888/owl_s/1.1/generic/ObjectList.owl">
  <!ENTITY moregr "http://www.ifi.unizh.ch/ddis/ont/owl-s/MoreGroundings.owl">
  <!ENTITY this "http://on.cs.unibas.ch/owl-s/1.1/ForEach.owl">
]>

<rdf:RDF
  xmlns="&this;#"
  xmlns:rdf="&rdf;#"
  xmlns:rdfs="&rdfs;#"
  xmlns:owl="&owl;#"
  xmlns:xsd="&xsd;#"
  xmlns:service="&service;#"
  xmlns:profile="&profile;#"
  xmlns:process="&process;#"
  xmlns:grounding="&grounding;#"
  xmlns:expr="&expr;#"
  xmlns:swrl="&swrl;#"
  xmlns:list="&list;#"
  xmlns:moregr="&moregr;#"
  xml:base="&this;">

<owl:Ontology rdf:about="">
	<owl:imports rdf:resource="&service;"/>
	<owl:imports rdf:resource="&process;"/>
	<owl:imports rdf:resource="&profile;"/>
	<owl:imports rdf:resource="&moregr;"/>
	<owl:versionInfo>$Id: ForEach.owl 2446 2010-05-25 08:31:38Z thorsten $</owl:versionInfo>
</owl:Ontology>

<owl:Class rdf:ID="MidiNote">
	<rdfs:subClassOf>
		<owl:Restriction>
			<owl:onProperty rdf:resource="#note" />
			<owl:cardinality rdf:datatype="&xsd;#nonNegativeInteger">1</owl:cardinality>
		</owl:Restriction>
	</rdfs:subClassOf>
	<rdfs:subClassOf>
		<owl:Restriction>
			<owl:onProperty rdf:resource="#length" />
			<owl:cardinality rdf:datatype="&xsd;#nonNegativeInteger">1</owl:cardinality>
		</owl:Restriction>
	</rdfs:subClassOf>
	<rdfs:subClassOf>
		<owl:Restriction>
			<owl:onProperty rdf:resource="#repetitions" />
			<owl:cardinality rdf:datatype="&xsd;#nonNegativeInteger">1</owl:cardinality>
		</owl:Restriction>
	</rdfs:subClassOf>
</owl:Class>

<owl:DatatypeProperty rdf:ID="note">
	<rdfs:domain rdf:resource="#MidiNote" />
	<rdfs:range rdf:resource="&xsd;#nonNegativeInteger" /><!-- should use DataRange -->
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:ID="length">
	<rdfs:domain rdf:resource="#MidiNote" />
	<rdfs:range rdf:resource="&xsd;#float" /><!-- should use DataRange -->
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:ID="repetitions">
	<rdfs:domain rdf:resource="#MidiNote" />
	<rdfs:range rdf:resource="&xsd;#nonNegativeInteger" /><!-- should use DataRange -->
</owl:DatatypeProperty>

<owl:Thing rdf:ID="halfc">
	<note rdf:datatype="&xsd;#nonNegativeInteger">60</note>
	<length rdf:datatype="&xsd;#float">0.5</length>
	<repetitions rdf:datatype="&xsd;#nonNegativeInteger">1</repetitions>
</owl:Thing>



<!-- Service description -->
<service:Service rdf:ID="ForEachService">
	<service:presents rdf:resource="#ForEachProfile"/>
	<service:describedBy rdf:resource="#ForEachProcess"/>
</service:Service>

<!-- Profile description -->
<profile:Profile rdf:ID="ForEachProfile">
	<service:presentedBy rdf:resource="#ForEachService"/>
	<profile:serviceName xml:lang="en">
		Simple For-Each test Service using some SWRL rules as preconditions.
	</profile:serviceName>
</profile:Profile>

<!-- Composite Process description -->
<process:CompositeProcess rdf:ID="ForEachProcess">
	<service:describes rdf:resource="#ForEachService"/>

	<process:hasInput>
		<process:Input rdf:ID="notes">
			<process:parameterType rdf:datatype="&xsd;#anyURI">&list;#List</process:parameterType>
			<rdfs:label>notes</rdfs:label>
		</process:Input>
	</process:hasInput>

	<process:hasLocal>
		<process:Local rdf:ID="loopVar">
			<process:parameterType rdf:datatype="&xsd;#anyURI">&this;#MidiNote</process:parameterType>
			<rdfs:label>loopVar</rdfs:label>
		</process:Local>
	</process:hasLocal>

	<process:composedOf>
		<process:For-Each rdf:ID="For-Each">
			<process:theList>
				<process:ValueOf>
					<process:fromProcess rdf:resource="&process;#TheParentPerform" />
					<process:theVar rdf:resource="#notes" />
				</process:ValueOf>
			</process:theList>
			<process:theLoopVar rdf:resource="#loopVar" />
			<process:iterateBody>
				<process:Perform>
					<process:process rdf:resource="#PlayNoteProcess" />
					<process:hasDataFrom>
						<process:InputBinding>
							<process:valueSource>
								<process:ValueOf>
									<process:fromProcess rdf:resource="&process;#TheParentPerform" />
									<process:theVar rdf:resource="#loopVar" />
								</process:ValueOf>
							</process:valueSource>
							<process:toParam rdf:resource="#noteInput" />
						</process:InputBinding>
					</process:hasDataFrom>
				</process:Perform>
			</process:iterateBody>
		</process:For-Each>
	</process:composedOf>
</process:CompositeProcess>


<process:AtomicProcess rdf:ID="PlayNoteProcess">
	<service:describes>
		<service:Service rdf:ID="PlayNoteService">
			<service:presents>
				<profile:Profile rdf:ID="PlayNoteProfile">
					<service:presentedBy rdf:resource="#PlayNoteService"/>
					<profile:serviceName xml:lang="en">Play Note Service</profile:serviceName>
					<profile:hasInput rdf:resource="#note"/>
				</profile:Profile>
			</service:presents>
			<service:describedBy rdf:resource="#PlayNoteProcess"/>
			<service:supports rdf:resource="#PlayNoteGrounding"/>
		</service:Service>
	</service:describes>
	<process:hasInput>
		<process:Input rdf:ID="noteInput">
			<process:parameterType rdf:datatype="&xsd;#anyURI">&this;#MidiNote</process:parameterType>
			<rdfs:label>noteInput</rdfs:label>
		</process:Input>
	</process:hasInput>
	<process:hasPrecondition>
		<expr:SWRL-Condition>
			<expr:expressionLanguage rdf:resource="&expr;#SWRL" />
			<expr:expressionBody rdf:parseType="Literal">
				<swrl:AtomList>
					<rdf:first>
						<!-- Kind of input value validation: verify that input is instance of MidiNote. -->
						<swrl:ClassAtom>
							<swrl:argument1>
								<process:Input rdf:about="#noteInput"/>
							</swrl:argument1>
							<swrl:classPredicate rdf:resource="#MidiNote"/>
						</swrl:ClassAtom>
					</rdf:first>
					<rdf:rest rdf:resource="&rdf;#nil" />
				</swrl:AtomList>
			</expr:expressionBody>
		</expr:SWRL-Condition>
	</process:hasPrecondition>
</process:AtomicProcess>

<moregr:JavaGrounding rdf:ID="PlayNoteGrounding">
	<service:supportedBy rdf:resource="#PlayNoteService"/>
	<moregr:hasAtomicProcessGrounding rdf:resource="#PlayNoteProcessGrounding"/>
</moregr:JavaGrounding>

<moregr:JavaAtomicProcessGrounding rdf:ID="PlayNoteProcessGrounding">
	<moregr:owlsProcess rdf:resource="#PlayNoteProcess"/>
	<moregr:javaClass>impl.owls.process.ForEachTest</moregr:javaClass>
	<moregr:javaMethod>playNote</moregr:javaMethod>
	<moregr:hasJavaParameter>
		<moregr:JavaParameter>
			<moregr:paramIndex rdf:datatype="&xsd;#nonNegativeInteger">0</moregr:paramIndex>
			<moregr:javaType>impl.owls.process.ForEachTest$MidiNote</moregr:javaType>
			<moregr:transformatorClass>impl.owls.process.ForEachTest$NoteTransformator</moregr:transformatorClass>
			<moregr:owlsParameter rdf:resource="#noteInput" />
		</moregr:JavaParameter>
	</moregr:hasJavaParameter>
</moregr:JavaAtomicProcessGrounding>

</rdf:RDF>