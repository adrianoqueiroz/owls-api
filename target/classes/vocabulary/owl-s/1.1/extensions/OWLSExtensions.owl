<?xml version="1.0" encoding="UTF-8"?>
<!--
	====================================================================== 
	Created:     20.01.2009                       
	Version:     $Id: OWLSExtensions.owl 2269 2009-08-19 15:21:09Z thorsten $
	
   (c) 2006 Michael Dänzer - University of Zürich Switzerland
   (c) 2009 Thorsten Möller - University of Basel Switzerland
   
   The MIT License
   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to
   deal in the Software without restriction, including without limitation the
   rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
   sell copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:
  
   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.
  
   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
   IN THE SOFTWARE.
	
	====================================================================== 
-->
<!DOCTYPE uridef [
	<!ENTITY rdf 		"http://www.w3.org/1999/02/22-rdf-syntax-ns">
	<!ENTITY rdfs 		"http://www.w3.org/2000/01/rdf-schema">
	<!ENTITY owl 		"http://www.w3.org/2002/07/owl">
	<!ENTITY xsd 		"http://www.w3.org/2001/XMLSchema">
	<!ENTITY process  "http://localhost:8888/owl_s/1.1/Process.owl">
   <!ENTITY dc			"http://purl.org/dc/elements/1.1/">
	<!ENTITY THIS     "http://on.cs.unibas.ch/owl-s/1.1/OWLSExtensions.owl">
]>

<rdf:RDF
	xmlns:rdf="&rdf;#"
	xmlns:rdfs="&rdfs;#"
	xmlns:owl="&owl;#"
	xmlns:xsd="&xsd;#"
	xmlns:process="&process;#"
	xmlns:dc="&dc;"
	xmlns="&THIS;#"
	xml:base="&THIS;">

<owl:Ontology rdf:about="">
	<rdfs:comment xml:lang="en">
		Upper-Level Ontology for OWL-S 1.1 language extension.
	</rdfs:comment>
	<owl:versionInfo>$Id: OWLSExtensions.owl 2269 2009-08-19 15:21:09Z thorsten $</owl:versionInfo>
	<dc:creator>Michael Daenzer</dc:creator>
	<dc:creator>Thorsten Möller</dc:creator>
	<dc:date>2009-01-20</dc:date>
	<dc:rights>Copyright 2006 Michael Dänzer - University of Zürich Switzerland</dc:rights>
	<dc:rights>Copyright 2009 Thorsten Möller - University of Basel Switzerland</dc:rights>
	<owl:imports rdf:resource="&process;" />
</owl:Ontology>


<owl:ObjectProperty rdf:ID="hasPerform">
	<rdfs:comment xml:lang="en">
		Relates a process to its enclosing perform when this process is part
		of some composite processes (When a process is part of some composite
		process it is always enclosed by a Perform).
	</rdfs:comment>
	<rdfs:domain rdf:resource="&process;#Process" />
	<rdfs:range rdf:resource="&process;#Perform" />
</owl:ObjectProperty>

<owl:ObjectProperty rdf:ID="connectedTo">
	<rdfs:comment xml:lang="en">
		Used to complement the consumer-pull data flow specification convention
		that OWL-S implements with a producer-push oriented convention. This
		property makes forward navigation possible, that is, it allows to navigate
		from some source parameter to its sink parameter(s). Consequently, it
		describes the inverse direction of ValueOf binding descriptions (which
		realize backwards data flow navigation, aka consumer-pull).
	</rdfs:comment>
	<rdfs:domain rdf:resource="&process;#Parameter" />
	<rdfs:range rdf:resource="&process;#Parameter" />
</owl:ObjectProperty>

<owl:Class rdf:ID="InputOrOutput">
	<owl:unionOf rdf:parseType="Collection">
		<owl:Class rdf:about="&process;#Input"/>
		<owl:Class rdf:about="&process;#Output"/>
	</owl:unionOf>
</owl:Class>

<owl:ObjectProperty rdf:ID="connectedToInput">
	<rdfs:comment xml:lang="en">
		Describes the data flow coming from a parameter (i.e., the source,
		which is	either an Output or Input) of a parent process and going to
		be consumed by an	Input of the enclosed process.
		Input-to-input	connections may seem to be illegal but they are
		required whenever	some sub process receives the value for some of its
		inputs from some input of the top level process (in this case the
		latter is always a composite process).
	</rdfs:comment>
	<rdfs:subPropertyOf rdf:resource="#connectedTo"/>
	<rdfs:domain rdf:resource="#InputOrOutput" />
	<rdfs:range rdf:resource="&process;#Input" />
</owl:ObjectProperty>

<owl:ObjectProperty rdf:ID="connectedToOutput">
	<rdfs:comment xml:lang="en">
		Describes the data flow coming from a parameter (i.e., the source,
		which is	either an Output or Input) of a enclosed process and going to
		be consumed by an Output of the parent process. Input-to-output
		connections may seem to be illegal but are allowed to specify shortcuts,
		that is, some input value is forwarded as-is to some output.
	</rdfs:comment>
	<rdfs:subPropertyOf rdf:resource="#connectedTo"/>
	<rdfs:domain rdf:resource="#InputOrOutput" />
	<rdfs:range rdf:resource="&process;#Output" />
</owl:ObjectProperty>

<owl:DatatypeProperty rdf:ID="mssType">
	<rdfs:comment xml:lang="en">
		In general, a data flow specification connects some source parameter
		to one ore more sink parameter(s). This property is intended to be
		used to track the most specific sink parameter type from the set of
		consumers of some source parameter. Hence, this property is meant to
		be computed by some tool when analyzing the data flow specification
		of some composite process.
	</rdfs:comment>
	<rdfs:domain rdf:resource="#InputOrOutput" />
	<rdfs:range rdf:resource="&xsd;#anyURI" />
</owl:DatatypeProperty>

</rdf:RDF>
