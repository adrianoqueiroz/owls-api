<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE uridef[
  <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns">
  <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema">
  <!ENTITY owl "http://www.w3.org/2002/07/owl">
  <!ENTITY xsd "http://www.w3.org/2001/XMLSchema">
  <!ENTITY service "http://localhost:8888/owl_s/1.2/Service.owl">
  <!ENTITY profile "http://localhost:8888/owl_s/1.2/Profile.owl">
  <!ENTITY process "http://localhost:8888/owl_s/1.2/Process.owl">
  <!ENTITY grounding "http://localhost:8888/owl_s/1.2/Grounding.owl">
  <!ENTITY expr "http://localhost:8888/owl_s/1.2/generic/Expression.owl">
  <!ENTITY swrl "http://www.w3.org/2003/11/swrl">
  <!ENTITY swrlb "http://www.w3.org/2003/11/swrlb">
  <!ENTITY list "http://localhost:8888/owl_s/1.2/generic/ObjectList.owl">
  <!ENTITY moregr "http://on.cs.unibas.ch/owl-s/1.2/MoreGroundings.owl">
  <!ENTITY this "http://on.cs.unibas.ch/owl-s/1.2/AnyOrder.owl">
]>

<rdf:RDF
  xmlns="&this;#"
  xmlns:rdf="&rdf;#"
  xmlns:rdfs="&rdfs;#"
  xmlns:owl="&owl;#"
  xmlns:xsd="&xsd;#"
  xmlns:service="&service;#"
  xmlns:profile="&profile;#"
  xmlns:process="&process;#"
  xmlns:grounding="&grounding;#"
  xmlns:expr="&expr;#"
  xmlns:swrl="&swrl;#"
  xmlns:list="&list;#"
  xmlns:moregr="&moregr;#"
  xml:base="&this;">

<owl:Ontology rdf:about="">
	<owl:imports rdf:resource="&service;"/>
	<owl:imports rdf:resource="&process;"/>
	<owl:imports rdf:resource="&profile;"/>
	<owl:imports rdf:resource="&moregr;"/>
	<owl:versionInfo>$Id: AnyOrder.owl 2398 2010-01-27 15:05:12Z thorsten $</owl:versionInfo>
</owl:Ontology>


<!-- Service description -->
<service:Service rdf:ID="AnyOrderService">
	<service:presents rdf:resource="#AnyOrderProfile"/>
	<service:describedBy rdf:resource="#AnyOrderProcess"/>
</service:Service>

<!-- Profile description -->
<profile:Profile rdf:ID="AnyOrderProfile">
	<service:presentedBy rdf:resource="#AnyOrderService"/>
	<profile:serviceName xml:lang="en">
		Simple Any-Order test Service using a Java grounding.
	</profile:serviceName>
</profile:Profile>

<!-- Composite Process description -->
<process:CompositeProcess rdf:ID="AnyOrderProcess">
	<service:describes rdf:resource="#AnyOrderService"/>

	<process:composedOf>
		<process:Any-Order rdf:ID="Any-Order">
			<process:components>
				<process:ControlConstructBag>
					<list:first rdf:resource="#A" />
					<list:rest>
						<process:ControlConstructBag>
							<list:first rdf:resource="#B" />
							<list:rest>
								<process:ControlConstructBag>
									<list:first rdf:resource="#C" />
									<list:rest rdf:resource="&list;#nil" />
								</process:ControlConstructBag>
							</list:rest>
						</process:ControlConstructBag>
					</list:rest>
				</process:ControlConstructBag>
			</process:components>
		</process:Any-Order>
	</process:composedOf>
</process:CompositeProcess>

<process:Perform rdf:ID="A">
	<process:process rdf:resource="#LogProcess" />
	<process:hasDataFrom rdf:resource="#InputBindingA" />
</process:Perform>
<process:Perform rdf:ID="B">
	<process:process rdf:resource="#LogProcess" />
	<process:hasDataFrom rdf:resource="#InputBindingB" />
</process:Perform>
<process:Perform rdf:ID="C">
	<process:process rdf:resource="#LogProcess" />
	<process:hasDataFrom rdf:resource="#InputBindingC" />
</process:Perform>

<process:InputBinding rdf:ID="InputBindingA">
	<process:valueData rdf:datatype="&xsd;#string">A</process:valueData>
	<process:toVar rdf:resource="#text" />
</process:InputBinding>

<process:InputBinding rdf:ID="InputBindingB">
	<process:valueData rdf:datatype="&xsd;#string">B</process:valueData>
	<process:toVar rdf:resource="#text" />
</process:InputBinding>

<process:InputBinding rdf:ID="InputBindingC">
	<process:valueData rdf:datatype="&xsd;#string">C</process:valueData>
	<process:toVar rdf:resource="#text" />
</process:InputBinding>

<process:AtomicProcess rdf:ID="LogProcess">
	<service:describes>
		<service:Service rdf:ID="LogService">
			<service:presents>
				<profile:Profile rdf:ID="LogProfile">
					<service:presentedBy rdf:resource="#LogService"/>
					<profile:serviceName xml:lang="en">Logger Service</profile:serviceName>
					<profile:hasInput rdf:resource="#text"/>
				</profile:Profile>
			</service:presents>
			<service:describedBy rdf:resource="#LogProcess"/>
			<service:supports rdf:resource="#LogGrounding"/>
		</service:Service>
	</service:describes>
	<process:hasInput>
		<process:Input rdf:ID="text">
			<process:parameterType rdf:datatype="&xsd;#anyURI">&xsd;#string</process:parameterType>
			<rdfs:label>text</rdfs:label>
		</process:Input>
	</process:hasInput>
<!--	<process:hasResult>-->
<!--		<process:Result>-->
<!--			<process:withOutput>-->
<!--				<process:OutputBinding>-->
<!--					<process:toVar rdf:resource="#sum" />-->
<!--					<process:valueSource>-->
<!--						<process:ValueOf>-->
<!--							<process:fromProcess rdf:resource="&process;#ThisPerform" />-->
<!--							<process:theVar rdf:resource="#tmp" />-->
<!--						</process:ValueOf>-->
<!--					</process:valueSource>-->
<!--				</process:OutputBinding>-->
<!--			</process:withOutput>-->
<!--			<process:inCondition rdf:resource="&expr;#AlwaysTrue" />-->
<!--			<process:hasEffect>-->
<!--				<expr:SWRL-Condition>-->
<!--					<expr:expressionObject>-->
<!--						<swrl:AtomList>-->
<!--							<rdf:first>-->
<!--								<swrl:BuiltinAtom>-->
<!--									<swrl:builtin rdf:resource="&swrlb;#add" />-->
<!--									<swrl:arguments>-->
<!--										<rdf:List>-->
<!--											<rdf:first rdf:resource="#sum" />-->
<!--											<rdf:rest>-->
<!--												<rdf:List>-->
<!--													<rdf:first rdf:resource="#a" />-->
<!--													<rdf:rest>-->
<!--														<rdf:List>-->
<!--															<rdf:first rdf:resource="#b" />-->
<!--															<rdf:rest rdf:resource="&rdf;#nil" />-->
<!--														</rdf:List>-->
<!--													</rdf:rest>-->
<!--												</rdf:List>-->
<!--											</rdf:rest>-->
<!--										</rdf:List>-->
<!--									</swrl:arguments>-->
<!--								</swrl:BuiltinAtom>-->
<!--							</rdf:first>-->
<!--							<rdf:rest rdf:resource="&rdf;#nil" />-->
<!--						</swrl:AtomList>-->
<!--					</expr:expressionObject>-->
<!--				</expr:SWRL-Condition>-->
<!--			</process:hasEffect>-->
<!--		</process:Result>-->
<!--	</process:hasResult>-->
</process:AtomicProcess>

<moregr:JavaGrounding rdf:ID="LogGrounding">
	<service:supportedBy rdf:resource="#LogService"/>
	<grounding:hasAtomicProcessGrounding rdf:resource="#LogProcessGrounding"/>
</moregr:JavaGrounding>

<moregr:JavaAtomicProcessGrounding rdf:ID="LogProcessGrounding">
	<grounding:owlsProcess rdf:resource="#LogProcess"/>
	<moregr:javaClass>impl.owls.process.AnyOrderTest</moregr:javaClass>
	<moregr:javaMethod>log</moregr:javaMethod>
	<moregr:hasJavaParameter>
		<moregr:JavaParameter>
			<moregr:paramIndex rdf:datatype="&xsd;#nonNegativeInteger">0</moregr:paramIndex>
			<moregr:javaType>java.lang.String</moregr:javaType>
			<moregr:owlsParameter rdf:resource="#text" />
		</moregr:JavaParameter>
	</moregr:hasJavaParameter>
</moregr:JavaAtomicProcessGrounding>

</rdf:RDF>