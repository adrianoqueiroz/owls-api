<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE uridef[
  <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns">
  <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema">
  <!ENTITY owl "http://www.w3.org/2002/07/owl">
  <!ENTITY xsd "http://www.w3.org/2001/XMLSchema">
  <!ENTITY service "http://localhost:8888/owl_s/1.2/Service.owl">
  <!ENTITY profile "http://localhost:8888/owl_s/1.2/Profile.owl">
  <!ENTITY process "http://localhost:8888/owl_s/1.2/Process.owl">
  <!ENTITY grounding "http://localhost:8888/owl_s/1.2/Grounding.owl">
  <!ENTITY expr "http://localhost:8888/owl_s/1.2/generic/Expression.owl">
  <!ENTITY swrl "http://www.w3.org/2003/11/swrl">
  <!ENTITY swrlb "http://www.w3.org/2003/11/swrlb">
  <!ENTITY list "http://localhost:8888/owl_s/1.2/generic/ObjectList.owl">
  <!ENTITY moregr "http://on.cs.unibas.ch/owl-s/1.2/MoreGroundings.owl">
]>

<rdf:RDF
  xmlns:rdf="&rdf;#"
  xmlns:rdfs="&rdfs;#"
  xmlns:owl="&owl;#"
  xmlns:xsd="&xsd;#"
  xmlns:service="&service;#"
  xmlns:profile="&profile;#"
  xmlns:process="&process;#"
  xmlns:grounding="&grounding;#"
  xmlns:expr="&expr;#"
  xmlns:swrl="&swrl;#"
  xmlns:list="&list;#"
  xmlns:moregr="&moregr;#"
  xmlns="http://on.cs.unibas.ch/owl-s/1.2/SplitJoin.owl#"
  xml:base="http://on.cs.unibas.ch/owl-s/1.2/SplitJoin.owl">

<owl:Ontology rdf:about="">
	<owl:imports rdf:resource="&service;"/>
	<owl:imports rdf:resource="&process;"/>
	<owl:imports rdf:resource="&profile;"/>
	<owl:imports rdf:resource="&moregr;"/>
	<owl:versionInfo>$Id: SplitJoin.owl 2398 2010-01-27 15:05:12Z thorsten $</owl:versionInfo>
</owl:Ontology>

<owl:Class rdf:ID="Person"/>
<owl:Class rdf:ID="Staff">
	<rdfs:subClassOf rdf:resource="#Person"/>
</owl:Class>
<Staff rdf:ID="Alice"/>
<Person rdf:ID="Bob"/>

<!-- Service description -->
<service:Service rdf:ID="SplitService">
	<service:presents rdf:resource="#SplitProfile"/>
	<service:describedBy rdf:resource="#MainProcess"/>
</service:Service>

<!-- Profile description -->
<profile:Profile rdf:ID="SplitProfile">
	<service:presentedBy rdf:resource="#SplitService"/>
	<profile:serviceName xml:lang="en">
		Simple Split test Service using a Java grounding.
	</profile:serviceName>
</profile:Profile>

<!-- Composite Process description -->
<process:CompositeProcess rdf:ID="MainProcess">
	<service:describes rdf:resource="#SplitService"/>
	<process:composedOf rdf:resource="#SJ"/>
</process:CompositeProcess>

<process:Split-Join rdf:ID="SJ">
	<process:components>
		<process:ControlConstructBag>
			<list:first rdf:resource="#PCP1" />
			<list:rest>
				<process:ControlConstructBag>
					<list:first rdf:resource="#PCP2" />
					<list:rest>
						<process:ControlConstructBag>
							<list:first rdf:resource="#PCP3" />
							<list:rest rdf:resource="&list;#nil" />
						</process:ControlConstructBag>
					</list:rest>
				</process:ControlConstructBag>
			</list:rest>
		</process:ControlConstructBag>
	</process:components>
</process:Split-Join>

<process:CompositeProcess rdf:ID="CP1">
	<process:composedOf>
		<process:If-Then-Else>
			<process:ifCondition>
				<expr:SWRL-Condition>
					<expr:expressionObject>
						<swrl:AtomList>
							<rdf:first>
								<swrl:ClassAtom>
									<swrl:classPredicate rdf:resource="#Person" />
									<swrl:argument1 rdf:resource="#Alice"/>
								</swrl:ClassAtom>
							</rdf:first>
							<rdf:rest rdf:resource="&rdf;#nil"/>
						</swrl:AtomList>
					</expr:expressionObject>
				</expr:SWRL-Condition>
			</process:ifCondition>
			<process:then rdf:resource="#T" />
			<process:else rdf:resource="#E" />
		</process:If-Then-Else>
	</process:composedOf>
</process:CompositeProcess>

<process:CompositeProcess rdf:ID="CP2">
	<process:hasLocal>
		<process:Loc rdf:ID="x">
			<process:parameterType rdf:datatype="&xsd;#anyURI">&xsd;#int</process:parameterType>
			<process:initialValue rdf:datatype="&xsd;#int">0</process:initialValue>
		</process:Loc>
	</process:hasLocal>

	<process:composedOf>
		<process:Repeat-While>
			<process:whileCondition>
				<expr:SWRL-Condition>
					<expr:expressionObject>
						<swrl:AtomList>
							<rdf:first>
								<swrl:BuiltinAtom>
									<swrl:builtin rdf:resource="&swrlb;#lessThan" />
									<swrl:arguments>
										<rdf:List>
											<rdf:first rdf:resource="#x" />
											<rdf:rest>
												<rdf:List>
													<rdf:first rdf:datatype="&xsd;#int">20</rdf:first>
													<rdf:rest rdf:resource="&rdf;#nil" />
												</rdf:List>
											</rdf:rest>
										</rdf:List>
									</swrl:arguments>
								</swrl:BuiltinAtom>
							</rdf:first>
							<rdf:rest rdf:resource="&rdf;#nil" />
						</swrl:AtomList>
					</expr:expressionObject>
				</expr:SWRL-Condition>
			</process:whileCondition>
			<process:whileProcess>
				<process:Sequence>
					<process:components>
						<process:ControlConstructList>
							<list:first rdf:resource="#PerformIncrement" />
							<list:rest>
								<process:ControlConstructList>
									<list:first>
										<process:Set>
											<process:setBinding>
												<process:LocBinding>
													<process:toVar rdf:resource="#x" />
													<process:valueSource>
														<process:ValueOf>
															<process:fromProcess rdf:resource="#PerformIncrement" />
															<process:theVar rdf:resource="#after"/>
														</process:ValueOf>
													</process:valueSource>
												</process:LocBinding>
											</process:setBinding>
										</process:Set>
									</list:first>
									<list:rest rdf:resource="&list;#nil" />
								</process:ControlConstructList>
							</list:rest>
						</process:ControlConstructList>
					</process:components>
				</process:Sequence>
			</process:whileProcess>
		</process:Repeat-While>
	</process:composedOf>

</process:CompositeProcess>

<process:Perform rdf:ID="T">
	<process:process rdf:resource="#LogProcess" />
	<process:hasDataFrom>
		<process:InputBinding>
			<process:valueData rdf:datatype="&xsd;#string">T</process:valueData>
			<process:toVar rdf:resource="#text" />
		</process:InputBinding>
	</process:hasDataFrom>
</process:Perform>

<process:Perform rdf:ID="E">
	<process:process rdf:resource="#LogProcess" />
	<process:hasDataFrom>
		<process:InputBinding>
			<process:valueData rdf:datatype="&xsd;#string">E</process:valueData>
			<process:toVar rdf:resource="#text" />
		</process:InputBinding>
	</process:hasDataFrom>
</process:Perform>

<process:Perform rdf:ID="PCP1">
	<process:process rdf:resource="#CP1" />
</process:Perform>

<process:Perform rdf:ID="PCP2">
	<process:process rdf:resource="#CP2" />
</process:Perform>

<process:Perform rdf:ID="PCP3">
	<process:process rdf:resource="#LogProcess" />
	<process:hasDataFrom>
		<process:InputBinding>
			<process:valueData rdf:datatype="&xsd;#string">P</process:valueData>
			<process:toVar rdf:resource="#text" />
		</process:InputBinding>
	</process:hasDataFrom>
</process:Perform>

<process:Perform rdf:ID="PerformIncrement">
	<process:hasDataFrom>
		<process:InputBinding>
			<process:toVar rdf:resource="#before" />
			<process:valueSource>
				<process:ValueOf>
					<process:fromProcess rdf:resource="&process;#ThisPerform" />
					<process:theVar rdf:resource="#x" />
				</process:ValueOf>
			</process:valueSource>
		</process:InputBinding>
	</process:hasDataFrom>
	<process:process rdf:resource="#IncrementProcess" />
</process:Perform>

<process:AtomicProcess rdf:ID="IncrementProcess">
	<service:describes>
		<service:Service rdf:ID="IncrementService">
			<service:presents>
				<profile:Profile rdf:ID="IncrementProfile">
					<service:presentedBy rdf:resource="#IncrementService"/>
					<profile:serviceName xml:lang="en">Make Diet Service</profile:serviceName>
					<profile:hasInput rdf:resource="#before"/>
					<profile:hasOutput rdf:resource="#after"/>
				</profile:Profile>
			</service:presents>
			<service:describedBy rdf:resource="#IncrementProcess"/>
			<service:supports rdf:resource="#IncrementGrounding"/>
		</service:Service>
	</service:describes>
	<process:hasInput>
		<process:Input rdf:ID="before">
			<process:parameterType rdf:datatype="&xsd;#anyURI">&xsd;#int</process:parameterType>
			<rdfs:label>input number</rdfs:label>
		</process:Input>
	</process:hasInput>
	<process:hasOutput>
		<process:Output rdf:ID="after">
			<process:parameterType rdf:datatype="&xsd;#anyURI">&xsd;#int</process:parameterType>
			<rdfs:label>incremented number</rdfs:label>
		</process:Output>
	</process:hasOutput>
</process:AtomicProcess>

<moregr:JavaGrounding rdf:ID="IncrementGrounding">
	<service:supportedBy rdf:resource="#IncrementService"/>
	<grounding:hasAtomicProcessGrounding rdf:resource="#IncrementProcessGrounding"/>
</moregr:JavaGrounding>

<moregr:JavaAtomicProcessGrounding rdf:ID="IncrementProcessGrounding">
	<grounding:owlsProcess rdf:resource="#IncrementProcess"/>
	<moregr:javaClass>impl.owls.process.SplitJoinTest</moregr:javaClass>
	<moregr:javaMethod>inc</moregr:javaMethod>
	<moregr:hasJavaParameter>
		<moregr:JavaParameter>
			<moregr:paramIndex rdf:datatype="&xsd;#nonNegativeInteger">0</moregr:paramIndex>
			<moregr:javaType>int</moregr:javaType>
			<moregr:owlsParameter rdf:resource="#before" />
		</moregr:JavaParameter>
	</moregr:hasJavaParameter>
	<moregr:javaOutput>
		<moregr:JavaVariable>
			<moregr:javaType>int</moregr:javaType>
			<moregr:owlsParameter rdf:resource="#after" />
		</moregr:JavaVariable>
	</moregr:javaOutput>
</moregr:JavaAtomicProcessGrounding>

<process:AtomicProcess rdf:ID="LogProcess">
	<service:describes>
		<service:Service rdf:ID="LogService">
			<service:presents>
				<profile:Profile rdf:ID="LogProfile">
					<service:presentedBy rdf:resource="#LogService"/>
					<profile:serviceName xml:lang="en">Logger Service</profile:serviceName>
					<profile:hasInput rdf:resource="#text"/>
				</profile:Profile>
			</service:presents>
			<service:describedBy rdf:resource="#LogProcess"/>
			<service:supports rdf:resource="#LogGrounding"/>
		</service:Service>
	</service:describes>
	<process:hasInput>
		<process:Input rdf:ID="text">
			<process:parameterType rdf:datatype="&xsd;#anyURI">&xsd;#string</process:parameterType>
			<rdfs:label>text</rdfs:label>
		</process:Input>
	</process:hasInput>
</process:AtomicProcess>

<moregr:JavaGrounding rdf:ID="LogGrounding">
	<service:supportedBy rdf:resource="#LogService"/>
	<grounding:hasAtomicProcessGrounding rdf:resource="#LogProcessGrounding"/>
</moregr:JavaGrounding>

<moregr:JavaAtomicProcessGrounding rdf:ID="LogProcessGrounding">
	<grounding:owlsProcess rdf:resource="#LogProcess"/>
	<moregr:javaClass>impl.owls.process.SplitJoinTest</moregr:javaClass>
	<moregr:javaMethod>log</moregr:javaMethod>
	<moregr:hasJavaParameter>
		<moregr:JavaParameter>
			<moregr:paramIndex rdf:datatype="&xsd;#nonNegativeInteger">0</moregr:paramIndex>
			<moregr:javaType>java.lang.String</moregr:javaType>
			<moregr:owlsParameter rdf:resource="#text" />
		</moregr:JavaParameter>
	</moregr:hasJavaParameter>
</moregr:JavaAtomicProcessGrounding>

</rdf:RDF>